/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_italian.h"

// Layer definitions
#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6
// -----------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "QUICK_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
		ql: quick_layer {
			compatible = "zmk,behavior-layer-tap";
			label = "QUICK_LAYER";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&mo>, <&kp>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			&kp Q       &kp W       &kp E        &kp R          &kp T                            &kp Y        &kp U         &kp I           &kp O         &kp P 
			&qt LGUI A  &qt LALT S  &qt LCTRL  D &qt LSHFT  F   &ql MEDIA G                      &qt RSHFT  H &qt RSHFT  J  &qt RCTRL K     &qt RALT  L   &qt RGUI  SQT
			// &kp Q       &kp W       &kp E        &kp R          &kp T                            &kp Y        &kp U         &kp I           &kp O         &kp P 
			&kp Z       &kp X       &kp C        &kp V          &kp B                            &kp N        &kp M         &kp COMMA       &kp DOT       &kp SLASH
					                             // &qt FUN ESC    &qt NAV SPACE                    &qt NUM BKSP &qt SYM RET 
					                             &kp  ESC    &kp  SPACE                    &kp BKSP &kp RET 
			>;
		};

		// Numbers and high frequency symbols
		// fun_layer {
		// 	label = "FUN";
		// 	bindings = <
		// 	&kp trans &kp trans &kp trans  &kp trans  &kp trans          &kp trans &kp F7 &kp F8 &kp F9 &kp F12
		// 	&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp trans          &kp trans &kp F4 &kp F5 &kp F6 &kp F11
		// 	&kp trans &kp trans &kp trans  &kp trans  &kp trans          &kp trans &kp F1 &kp F2 &kp F3 &kp F10
		// 						           &kp trans  &kp trans          &kp TAB &kp DEL
		// 	>;
		// };

		// Main modifiers and arrow keys
		// num_layer {
		// 	label = "NUM";
		// 	bindings = <
		// 	&kp LBKT  &kp N7  &kp N8  &kp N9  &kp RBKT           &kp trans &kp trans &kp trans &kp trans &kp trans
		// 	&kp SEMI  &kp N4  &kp N5  &kp N6  &kp EQUAL          &kp trans &kp RSHFT &kp RCTRL &kp RALT  &kp RGUI  
		// 	&kp GRAVE &kp N1  &kp N2  &kp N3  &kp BSLH           &kp trans &kp trans &kp trans &kp trans &kp trans
		// 						      &kp N0  &kp MINUS          &kp trans &kp trans
		// 	>;
		// };

		// Function keys with modifiers
		// sym_layer {
		// 	label = "SYM";
		// 	bindings = <
		// 	&kp LBRC  &kp AMPS &kp APOS   &kp UNDER   &kp RBRC          &kp trans &kp trans &kp trans &kp trans &kp trans
		// 	&kp COLON &kp DLLR &kp PRCNT  &kp CARET   &kp PLUS          &kp trans &kp RSHFT &kp RCTRL &kp RALT  &kp RGUI  
		// 	&kp TILDE &kp EXCL &kp AT     &kp HASH    &kp PIPE          &kp trans &kp trans &kp trans &kp trans &kp trans
		// 						          &kp KP_LPAR &kp KP_RPAR       &kp trans &kp trans
		// 	>;
		// };

		// Low frequency symbols.
		// nav_layer {
		// 	label = "NAV";
		// 	bindings = <
		// 	&kp trans &kp trans &kp trans  &kp trans  &kp trans          &kp REDO   &kp K_PASTE &kp K_COPY  &kp K_CUT &kp K_UNDO
		// 	&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp trans          &kp CAPS   &kp LEFT    &kp DOWN    &kp UP    &kp RIGHT
		// 	&kp trans &kp trans &kp trans  &kp trans  &kp trans          &kp INS    &kp HOME    &kp PG_UP   &kp PG_DN &kp END
		// 						           &kp trans  &kp trans          &kp BKSP   &kp DEL
		// 	>;
		// };

		// Used to type regional accents.
		// media_layer {
		// 	label = "MEDIA";
		// 	bindings = <
		// 	&bt BT_CLR &kp trans &kp trans  &kp trans  &kp trans          &kp K_MUTE &kp trans     &kp trans    &kp trans    &kp trans
		// 	&kp trans  &kp trans &kp trans  &kp trans  &kp trans          &kp K_PP   &kp K_PREV    &kp K_VOL_DN &kp K_VOL_UP &kp K_NEXT
		// 	&kp trans  &kp trans &kp trans  &kp trans  &kp trans          &kp K_STOP &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
		// 						            &kp trans  &kp trans          &kp trans  &kp trans
		// 	>;
		// };

	};
};
