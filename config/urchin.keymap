/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define FUN 1
#define NUM 2
#define SYM 3
#define NAV 4
#define MEDIA 5
// #define ACCENT 5
// #define SETTINGS 6
// -----------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};

&lt {
    quick-tap-ms = <200>;
};


/ {

    behaviors {
        lh_pht: left_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;    // <---[[right-hand keys]]
        };
        rh_pht: right_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;    // <---[[right-hand keys]]
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
		lt {
			quick-tap-ms = <100>;	
		};
    };

    combos {
        compatible = "zmk,combos";
        // Your combos go here
        tab {
            timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&kp TAB>;
        };
        del {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp DEL>;
        };

    };

	keymap {

		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			// 0        // 1        //2          //3            //4                              // 5              // 6          // 7            // 8          // 9
			&kp Q       &kp W       &kp E        &kp R          &kp T                            &kp Y             &kp U         &kp I           &kp O         &kp P 
			// 10       // 11       //12         //13           //14                             //15              // 16         // 17           // 18         // 19
			&lh_pht LGUI A  &lh_pht LALT S  &lh_pht LCTRL  D &lh_pht LSHFT  F   &lt MEDIA G            &kp H       &rh_pht RSHFT J   &rh_pht RCTRL K     &rh_pht RALT  L   &rh_pht RGUI  SQT
			// 20       // 21       // 22         // 23         // 24                            // 25             // 26         // 27           // 28         // 29
			&kp Z       &kp X       &kp C        &kp V          &kp B                            &kp N             &kp M         &kp COMMA       &kp DOT       &kp SLASH
									             // 30           // 31                           // 32             // 33 
					                             &lt FUN ESC    &lt NAV SPACE                    &lt NUM BACKSPACE &lt SYM RET  
			>;
		};

		fun_layer {
			label = "FUN";
			bindings = <
			&trans    &trans    &trans     &trans     &trans             &trans  &kp F7 &kp F8 &kp F9 &kp F12
			&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans             &trans  &kp F4 &kp F5 &kp F6 &kp F11
			&trans    &trans    &trans     &trans     &trans             &trans  &kp F1 &kp F2 &kp F3 &kp F10
								           &trans     &trans             &trans &trans
			>;
		};

		num_layer {
			label = "NUM";
			bindings = <
			&kp LBKT  &kp N7  &kp N8  &kp N9  &kp RBKT           &trans &trans &trans &trans &trans
			&kp SEMI  &kp N4  &kp N5  &kp N6  &kp EQUAL          &trans &kp RSHFT &kp RCTRL &kp RALT  &kp RGUI  
			&kp GRAVE &kp N1  &kp N2  &kp N3  &kp BSLH           &trans &trans &trans &trans &trans
								      &kp N0  &kp MINUS          &trans &trans
			>;
		};

		sym_layer {
			label = "SYM";
			bindings = <
			&kp LBRC  &kp AMPS &kp STAR   &kp RPAR    &kp RBRC          &trans &trans    &trans    &trans    &trans
			&kp COLON &kp DLLR &kp PRCNT  &kp CARET   &kp PLUS          &trans &kp RSHFT &kp RCTRL &kp RALT  &kp RGUI  
			&kp TILDE &kp EXCL &kp AT     &kp HASH    &kp PIPE          &trans &trans    &trans    &trans    &trans
								          &kp LPAR    &kp UNDER         &trans &trans
			>;
		};

		nav_layer {
			label = "NAV";
			bindings = <
			&trans    &trans    &trans     &trans    &trans          &kp K_REDO &kp K_PASTE &kp K_COPY  &kp K_CUT &kp K_UNDO
			&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT &trans          &kp CAPS   &kp LEFT    &kp DOWN    &kp UP    &kp RIGHT
			&trans    &trans    &trans     &trans    &trans          &kp INS    &kp HOME    &kp PG_UP   &kp PG_DN &kp END
								           &trans    &trans          &trans     &trans
			>;
		};
		media_layer {
			label = "MEDIA";
			bindings = <
			&bt BT_CLR &trans &trans  &trans  &trans             &kp K_MUTE &trans        &trans       &trans       &trans
			&trans     &trans &trans  &trans  &trans             &kp K_PP   &kp K_PREV    &kp K_VOL_DN &kp K_VOL_UP &kp K_NEXT
			&trans     &trans &trans  &trans  &trans             &kp K_STOP &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
								      &trans  &trans             &trans     &trans
			>;
		};

	};
};
